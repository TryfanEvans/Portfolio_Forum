{"version":3,"sources":["components/post.js","components/loading.js","components/addpost.js","components/title.js","components/posts.js","components/advertisement.js","components/sidebar.js","components/content.js","components/navigationbar.js","App.js","serviceWorker.js","index.js"],"names":["post","className","this","props","comment","name","body","Component","loading","isLoading","display","loaded","style","width","addpost","state","err","onSubmit","e","preventDefault","setState","addPost","onChange","target","value","rows","type","placeholder","title","getCapitalisedTitle","str","split","forEach","word","index","toUpperCase","join","getCapitalisedSentence","Axios","get","then","res","data","catch","error","console","log","src","alt","Posts","comments","getEnlargedBody","num_blocks","Math","ceil","random","i","axios","getNumComments","reverse","map","key","id","advertisement","getImage","advertisement_height","Sidebar","Array","empty_var","content","navigationbar","App","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ed516886.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default class post extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"post\">\r\n        <h3>{this.props.comment.name}</h3>\r\n        <p>{this.props.comment.body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class loading extends Component {\r\n  isLoading = () => {\r\n    return { display: this.props.loaded ? \"none\" : \"block\" };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loading\" style={this.isLoading()}>\r\n        <div\r\n          className=\"fa fa-spinner fa-spin fa-5x\"\r\n          style={{ width: \"14rem\" }}\r\n        ></div>\r\n        <p> Getting response from Json Placeholder...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class addpost extends Component {\r\n  state = {\r\n    body: \"\",\r\n    err: \"\",\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.body === \"\" || this.state.body === null) {\r\n      this.setState({ err: \"Input text to comment\" });\r\n\r\n      return;\r\n    } else {\r\n      this.setState({ err: \"\" });\r\n    }\r\n    this.props.addPost(this.state.body);\r\n    this.setState({ body: \"\" });\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <textarea\r\n          rows=\"4\"\r\n          type=\"text\"\r\n          name=\"body\"\r\n          placeholder=\"type your comment...\"\r\n          value={this.state.body}\r\n          onChange={this.onChange}\r\n        ></textarea>\r\n        <p className=\"error\">{this.state.err}</p>\r\n        <input type=\"submit\" value=\"Submit\" className=\"btn\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport default class title extends Component {\r\n  getCapitalisedTitle = (str) => {\r\n    str = str.split(\" \");\r\n    str.forEach(function (word, index) {\r\n      word = word.split(\"\");\r\n      word[0] = word[0].toUpperCase();\r\n\r\n      str[index] = word.join(\"\");\r\n    }, str); // use arr as this\r\n\r\n    return str.join(\" \");\r\n  };\r\n\r\n  getCapitalisedSentence = (str) => {\r\n    str = str.split(\"\");\r\n    str[0] = str[0].toUpperCase();\r\n\r\n    return str.join(\"\");\r\n  };\r\n\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    Axios.get(\"https://jsonplaceholder.typicode.com/comments/21\")\r\n      .then((res) => {\r\n        //ignore the error, async logic is confusing google chrome\r\n        this.setState({ name: this.getCapitalisedTitle(res.data.name) + \"?\" });\r\n        this.setState({ body: this.getCapitalisedSentence(res.data.body) });\r\n      })\r\n      .catch((error) => console.log({ error }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"title\">\r\n        <h2> {this.state.name}</h2>\r\n        <p> {this.state.body}</p>\r\n        <img src=\"https://picsum.photos/600/300\" alt=\"placeholder image\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Post from \"./post.js\";\r\nimport Loading from \"./loading.js\";\r\nimport AddPost from \"./addpost.js\";\r\nimport Title from \"./title.js\";\r\nimport \"./style.css\";\r\n\r\nexport default class Posts extends Component {\r\n  state = {\r\n    comments: [],\r\n    loaded: false,\r\n  };\r\n\r\n  getEnlargedBody = (str) => {\r\n    //gets a random integer within the range of 1 to 7\r\n    //1 is added for the unlikely case that math.Random() returns 0\r\n    const num_blocks = Math.ceil(Math.random() * 7 + 1);\r\n    //repeats the str input, giving each comment a random size\r\n\r\n    var body = \"\";\r\n    for (var i = 0; i < num_blocks; i++) {\r\n      body += str;\r\n    }\r\n    return body;\r\n  };\r\n\r\n  getCapitalisedSentence = (str) => {\r\n    str = str.split(\"\");\r\n    str[0] = str[0].toUpperCase();\r\n\r\n    return str.join(\"\");\r\n  };\r\n\r\n  getCapitalisedTitle = (str) => {\r\n    str = str.split(\" \");\r\n    str.forEach(function (word, index) {\r\n      word = word.split(\"\");\r\n      word[0] = word[0].toUpperCase();\r\n\r\n      str[index] = word.join(\"\");\r\n    }, str); // use arr as this\r\n\r\n    return str.join(\" \");\r\n  };\r\n  addPost = (body) => {\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/comments\", {\r\n        name: \"guest\",\r\n        body,\r\n      })\r\n      .then((res) => {\r\n        this.setState({ comments: [...this.state.comments, res.data] });\r\n      })\r\n      .catch((res) => {});\r\n  };\r\n\r\n  getNumComments = () => Math.ceil(Math.random() * 20);\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    axios\r\n      //WARNING: templating causes a cors error\r\n      .get(\r\n        \"https://jsonplaceholder.typicode.com/comments?_limit=\" +\r\n          this.getNumComments()\r\n      )\r\n      .then((res) => {\r\n        //modifies the data with a single setState\r\n        this.state.comments = res.data;\r\n\r\n        this.state.comments.forEach((comment) => {\r\n          comment.body = this.getEnlargedBody(comment.body);\r\n          comment.body = this.getCapitalisedSentence(comment.body);\r\n          comment.name = this.getCapitalisedTitle(comment.name);\r\n        });\r\n        //ignore the error, async logic has confused google chrome\r\n        this.setState({ loaded: true });\r\n        console.log(\"ignore the error, async logic has confused the browser\");\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //renders in reverse order so new comments go at the top\r\n      <div className=\"posts\">\r\n        <Title />\r\n        <AddPost addPost={this.addPost} />\r\n\r\n        <Loading loaded={this.state.loaded} />\r\n\r\n        {this.state.comments.reverse().map((comment) => {\r\n          return <Post comment={comment} key={comment.id} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class advertisement extends Component {\r\n  getImage = () => {\r\n    //gets a random integer within the range of 200 to 600, in increments of 50\r\n    //200 is only returned when math.Random() returns 0\r\n    const advertisement_height = Math.ceil(Math.random() * 8 + 4) * 50;\r\n    return `https://picsum.photos/300/${advertisement_height}`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"advertisement\">\r\n        <p>ADVERTISEMENT</p>{\" \"}\r\n        <img src={this.getImage()} alt=\"advertisement placeholder\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport Advertisement from \"./advertisement.js\";\r\n\r\nexport default class Sidebar extends Component {\r\n  render() {\r\n    return (\r\n      //A workaround for return not supporting for loops\r\n      <div className=\"sidebar\">\r\n        {[...Array(3)].map((empty_var, key) => (\r\n          <Advertisement key={key} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Posts from \"./posts.js\";\r\nimport Sidebar from \"./sidebar.js\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default class content extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Posts />\r\n        <Sidebar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function navigationbar() {\r\n  return (\r\n    <div className=\"navigationbar\">\r\n      <img src=\"logo192.png\" alt=\"react logo\" />\r\n      <h1>Programming and Chill</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Content from \"./components/content.js\";\nimport Navigationbar from \"./components/navigationbar.js\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Title from \"./components/title.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigationbar />\n      <Router>\n        <Route path=\"/title\" render={(props) => <Title />} />\n        <Route path=\"/\" render={(props) => <Content />} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}